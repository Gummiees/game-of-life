{"ast":null,"code":"import { timer } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction AppComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cell_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r7 === \"alive\" ? \"o\" : \"\", \" \");\n  }\n}\n\nfunction AppComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, AppComponent_div_1_div_1_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r5);\n  }\n}\n\nfunction AppComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0, 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_3_Template_ng_container_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.goToNextIteration();\n    });\n    i0.ɵɵelementStart(1, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.goToNextIteration();\n    });\n    i0.ɵɵtext(2, \" Next iteration \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_3_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.runAutomatically();\n    });\n    i0.ɵɵtext(4, \" Start \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction AppComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.slower();\n    });\n    i0.ɵɵtext(1, \" Slower \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_4_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.runManually();\n    });\n    i0.ɵɵtext(3, \" Stop \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_4_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.faster();\n    });\n    i0.ɵɵtext(5, \" Faster \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.inputError);\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.iteratingManually = true;\n      this.gridSize = 20;\n      this.inputError = '';\n      this.currentTimer = 2000;\n      this.game = this.constructGame();\n    }\n\n    ngOnDestroy() {\n      var _a;\n\n      (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n\n    goToNextIteration() {\n      this.game = this.nextStep(this.game);\n    }\n\n    onInputChange() {\n      if (this.gridSize > 100 || this.gridSize < 0) {\n        this.inputError = 'Grid size must be between 0 and 100';\n        setTimeout(() => this.gridSize = 20);\n        setTimeout(() => this.inputError = '', 3000);\n      }\n    }\n\n    runManually() {\n      var _a;\n\n      (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      this.iteratingManually = true;\n    }\n\n    runAutomatically() {\n      var _a;\n\n      (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      this.subscription = timer(0, this.currentTimer).subscribe(() => this.goToNextIteration());\n      this.iteratingManually = false;\n    }\n\n    slower() {\n      if (this.currentTimer < 100000) {\n        this.currentTimer *= 2;\n      }\n\n      this.runAutomatically();\n    }\n\n    faster() {\n      if (this.currentTimer > 100) {\n        this.currentTimer = Math.floor(this.currentTimer / 2);\n      }\n\n      this.runAutomatically();\n    }\n\n    reset() {\n      this.game = this.constructGame();\n    }\n\n    constructGame() {\n      const game = [];\n\n      for (let i = 0; i < this.gridSize; i++) {\n        game.push(this.constructRow());\n      }\n\n      return game;\n    }\n\n    constructRow() {\n      const row = [];\n\n      for (let j = 0; j < this.gridSize; j++) {\n        const cell = this.isGeneratedAlive() ? 'alive' : 'dead';\n        row.push(cell);\n      }\n\n      return row;\n    }\n\n    isGeneratedAlive() {\n      return Math.floor(Math.random() * 2) === 1;\n    }\n\n    nextStep(game) {\n      const next = [];\n      game.forEach((row, i) => {\n        const nextRow = this.analiseRow({\n          row,\n          y: i\n        });\n        next.push(nextRow);\n      });\n      return next;\n    }\n\n    analiseRow(opts) {\n      const next = [];\n      opts.row.forEach((cell, i) => {\n        const nextCell = this.analiseCell({\n          cell,\n          y: opts.y,\n          x: i\n        });\n        next.push(nextCell);\n      });\n      return next;\n    }\n\n    analiseCell(opts) {\n      let totalAdjacentCellsAlive = 0;\n\n      for (let y = opts.y - 1; y <= opts.y + 1; y++) {\n        const row = this.game[this.getAbsolute(y)];\n\n        for (let x = opts.x - 1; x <= opts.x + 1; x++) {\n          if (y !== opts.y || x !== opts.x) {\n            const cell = row[this.getAbsolute(x)];\n\n            if (this.isCellAlive(cell)) {\n              totalAdjacentCellsAlive++;\n            }\n          }\n        }\n      }\n\n      if (this.isCellAlive(opts.cell)) {\n        if (totalAdjacentCellsAlive < 2) {\n          return 'dead';\n        }\n\n        if (totalAdjacentCellsAlive <= 3) {\n          return 'alive';\n        }\n\n        return 'dead';\n      }\n\n      if (totalAdjacentCellsAlive === 3) {\n        return 'alive';\n      }\n\n      return 'dead';\n    }\n\n    getAbsolute(x) {\n      if (x < 0) {\n        return this.gridSize - 1;\n      }\n\n      if (x > this.gridSize - 1) {\n        return 0;\n      }\n\n      return x;\n    }\n\n    isCellAlive(cell) {\n      return cell === 'alive';\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 13,\n    vars: 5,\n    consts: [[1, \"game\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"buttons\"], [3, \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"automatically\", \"\"], [3, \"click\"], [\"for\", \"size\"], [\"name\", \"size\", \"type\", \"number\", \"min\", \"0\", \"max\", \"100\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [1, \"row\"], [\"class\", \"cell\", 4, \"ngFor\", \"ngForOf\"], [1, \"cell\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, AppComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, AppComponent_ng_container_3_Template, 5, 0, \"ng-container\", 3);\n        i0.ɵɵtemplate(4, AppComponent_ng_template_4_Template, 6, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_6_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(7, \" Reset \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"form\")(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Grid size\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.gridSize = $event;\n        })(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_11_listener() {\n          return ctx.onInputChange();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, AppComponent_div_12_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(5);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.game);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.iteratingManually)(\"ngIfElse\", _r2);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.gridSize);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.inputError);\n      }\n    },\n    directives: [i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i2.MinValidator, i2.MaxValidator, i2.NumberValueAccessor, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\".row[_ngcontent-%COMP%]:first-child   .cell[_ngcontent-%COMP%]{border-top:1px solid black}.row[_ngcontent-%COMP%]   .cell[_ngcontent-%COMP%]{width:20px;height:20px;border-right:1px solid black;border-bottom:1px solid black}.row[_ngcontent-%COMP%]   .cell[_ngcontent-%COMP%]:first-child{border-left:1px solid black}form[_ngcontent-%COMP%], .buttons[_ngcontent-%COMP%]{margin-top:10px;gap:10px}form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:50px}.row[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .cell[_ngcontent-%COMP%], .buttons[_ngcontent-%COMP%], form[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}